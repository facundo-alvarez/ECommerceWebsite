@page "{category:alpha}" 
@model Web.Pages.Products.IndexModel
@Html.AntiForgeryToken()

@{
    var categoryName = Model.Category;
    string extension = ".jpg";
    string imageName = categoryName + extension;
}

<style>
    .desc {
        display: block;
        height: 80px;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 0.8rem;
    }
</style>

<div class="container mb-5">

    <div class="row justify-content-end my-3">
        <div class="col-md-3">
            <select id="sortingSelect" class="form-select">
                <option selected disabled>-- Sort by --</option>
                <option value="1">Sort by price: low to high</option>
                <option value="2">Sort by price: high to low</option>
            </select>
        </div>
    </div>

    <div class="row">

        <div class="col-lg-3">
            <div class=" bg-white shadow-sm  p-4">
                <div class="row">
                    <h6>Price</h6>
                    <div class="d-flex">
                        <input id="minPriceInput" type="number" class="form-control priceFilter" min="1" max="100" placeholder="1"/>
                        <input id="maxPriceInput" type="number" class="form-control priceFilter" min="1" max="100" placeholder="100"/>
                    </div>
                </div>
                <div class="row mt-4">
                    <h6>Availability</h6>
                    <div class="form-check ms-3">
                      <input id="onSaleInput" class="form-check-input checkFilter" type="checkbox">
                      <label class="form-check-label" for="flexCheckDefault">On Sale</label>
                    </div>
                </div>
                <div class="row mt-4">
                    <h6>Stock</h6>
                    <div class="form-check ms-3">
                      <input id="onStockInput" class="form-check-input checkFilter" type="checkbox">
                      <label class="form-check-label" for="flexCheckDefault">On Stock</label>
                    </div>
                </div>

                <button id="cleanFilters" class="btn btn-outline-danger mt-4">Clean Filters</button>             
            </div>
        </div>

        <div class="col-lg-9">

            <div class="row justify-content-center" id="productList">
                <partial name="_ProductListPartial" model="Model.ProductList"></partial>
            </div>
            <div class="row justify-content-center">
                <button id="loadMore" class="btn btn-outline-secondary my-4 w-25">Load More</button>    
            </div>
        </div>
    </div>
</div>


@section scripts{ 
    
    @*Add to cart*@
     <script>

        $(document).on('click', '.addToCart', function() {

            var productId = $(this).attr('id');

            $.get('@Url.Page("Index","AddToCart")', { 'id': parseInt(productId) }, function(response) {
                $('.cartMenu').html(response);
                $('#'+productId+ '.addToCart').html('<i class="bi bi-check-lg"></i>');
            });
        });

    </script>

    @*Filters*@
    <script>

        $(document).ready(function() {

            var minPrice = 1;
            var maxPrice = 100;

            var data = {};
            var filters = [];

            //Check Filters
            $(document).on('change', '.checkFilter', function() {

                var Id = $(this).attr('id').toString();

                if (this.checked) {
                    data = {
                        'Id': Id,
                        'Value': 'true'
                    };
                    filters.push(data);
                }
                else {
                    var index = filters.findIndex(data => data.Id == Id);
                    filters.splice(index, 1);
                }

                ajaxCall();

            }); 

            //Price Filters
            $(document).on('change', '.priceFilter', function() {
                
                var inputId = $(this).attr('id').toString();

                var index = filters.findIndex(data => data.Id == inputId);

                if (index != -1) {
                    filters.splice(index, 1);
                }

                if (inputId == 'minPriceInput') {

                    minPrice = $(this).val();

                    if (minPrice < 1) {
                        minPrice = 1;
                    }

                    if (minPrice > 100) {
                        minPrice = 100;
                    }

                    $('#minPriceInput').val(minPrice);

                    data = {
                        'Id': inputId,
                        'Value': minPrice.toString()
                    };

                    filters.push(data);
                }

                if (inputId == 'maxPriceInput') {
                    maxPrice = $(this).val();
                    if (maxPrice > 100) {
                        maxPrice = 100;
                    }
                    if (maxPrice < 1) {
                        maxPrice = 1;
                    }

                    data = {
                        'Id': inputId,
                        'Value': maxPrice.toString()
                    };

                    filters.push(data);
                }

                ajaxCall();
            });

            //Clean Filters
            $(document).on('click', '#cleanFilters', function() {

                filters = [];

                $('#minPriceInput').val('');    
                $('#maxPriceInput').val('');
                $('#onStockInput').prop('checked', false); 
                $('#onSaleInput').prop('checked', false); 

                ajaxCall();
            });

            function ajaxCall() {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Page("Index","ProductsFilters")',
                    dataType: "html",
                    data: JSON.stringify(filters),
                    contentType: "application/json",
                    beforeSend: function (xhr) {

                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: function(response) {
                        $('#productList').html(response);
                        $('#loadMore').prop("disabled", false).html('Load more');

                    },
                    failure: function() {
                        alert("failure");
                    },
                    error: function() {
                        alert("error");
                    }
                });
            }
        });


    </script>

    @*Load more*@
    <script>

        $(document).on('click', '#loadMore', function(currentPage) {

            $.get('@Url.Page("Index","LoadMore")', function(response) {

                if (response != 'empty') {
                    $('#productList').append(response);
                    $('#loadMore').prop("disabled", false).html('Load more');
                }
                else {
                    $('#loadMore').prop("disabled", true).html('End of results');
                }
            });
        });

    </script>

    @*Order By*@
    <script>

        $(document).on('change', '#sortingSelect', function() {
    
            var selectId = $(this).val();

            $.get('@Url.Page("Index","Sort")', { 'id' : selectId }, function(response) {
                $('#productList').html(response);
                $('#loadMore').prop("disabled", false).html('Load more');
            });
        });      

    </script>

    @*Favorites*@
     <script>

        $('.addToFavorites').click(function() {

            var id = $(this).attr('id');

            $.get('@Url.Page("Index","AddToFavorites")', {'id': id}, function(result) {

                if (result == "Added") {
                    $('#'+id+ '.addToFavorites').html('<i class="bi bi-heart"></i>');                            
                }
                if (result == "Removed") {
                    $('#'+id+ '.addToFavorites').html('<i class="bi bi-heart-fill"></i>');
                }
                if (result == "Not Autenticated")
                {
                    alert('You need to login')
                }
            });
        });

    </script>
}