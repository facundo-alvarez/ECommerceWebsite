@page "{category:alpha}/{currentpage?}" 
@model Web.Pages.Products.IndexModel
@Html.AntiForgeryToken()


<style>
    .desc {
        display: block;
        height: 80px;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 0.8rem;
    }
</style>

<div class="container-lg">
    <div class="row">

        <div class="col-3 border border-2 rounded-3 my-4">
            <div class="row">
                <h4>Price Filter</h4>
                <div class="col">
                    <input id="minPriceInput" type="number" class="form-control priceFilter" min="1" max="100" placeholder="1"/>
                </div>
                <div class="col">
                    <input id="maxPriceInput" type="number" class="form-control priceFilter" min="1" max="100" placeholder="100"/>
                </div>
            </div>
            <div class="row">
                <div class="form-check">
                  <input id="onSaleInput" class="form-check-input checkFilter" type="checkbox">
                  <label class="form-check-label" for="flexCheckDefault">On Sale</label>
                </div>
                <div class="form-check">
                  <input id="onStockInput" class="form-check-input checkFilter" type="checkbox">
                  <label class="form-check-label" for="flexCheckDefault">On Stock</label>
                </div>
            </div>

            <button id="filterButton" class="btn btn-primary">Filter</button>             
        </div>

        <nav class="col-9 text-center">

            @if(Model.IsProductAdded)
            {
                <div class="toast align-items-center position-fixed" style="z-index: 100" id="MyToast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <strong>Product added to the cart</strong>
                        </div>
                        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }


            <div class="row row-cols-lg-3" id="productList">
                <partial name="_ProductListPartial" model="Model.ProductList"></partial>
            </div>


            <nav>
                <ul class="pagination">
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a asp-page="Index"  asp-route-currentpage="@i" class="page-link">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </nav>
    </div>
</div>


@section scripts{ 
    <script src="~/lib/jquery-validation-unobtrusive/jquery.unobtrusive-ajax.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {

            var toastHTMLElement = document.getElementById("MyToast")
            var toastElement = new bootstrap.Toast(toastHTMLElement);

            toastElement.show();

        }, false);  
    </script>

     <script>
        $(document).on('click', '#addToCart', function() {

            var productId = $(this).attr('prodid');

            $.ajax({
                type: 'GET',
                url: '@Url.Page("Index","AddToCart")',
                data: {
                    prodId: productId
                },
                success: function() {
                    $('#cartMenu').load('?handler=PartialCart'); 
                },
                failure: function() {
                    alert("failure");
                },
                error: function() {
                    alert("error");
                }
            });
        });
    </script>

    <script>

        $(document).ready(function() {

            var minPrice = 1;
            var maxPrice = 100;

            var data = {};
            var filters = [];

            $(document).on('change', '.checkFilter', function() {

                var Id = $(this).attr('id').toString();

                if (this.checked) {
                    data = {
                        'Id': Id,
                        'Value': true
                    };
                    filters.push(data);
                }
                else {
                    var index = filters.findIndex(data => data.Id == Id);
                    filters.splice(index, 1);
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Page("Index","ProductsPartial")',
                    dataType: "html",
                    data: JSON.stringify(filters),
                    contentType: "application/json",
                    beforeSend: function (xhr) {

                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: function(response) {
                        $('#productList').html(response);
                    },
                    failure: function() {
                        alert("failure");
                    },
                    error: function() {
                        alert("error");
                    }
                });
            }); 
        });

    </script>

    <script>

         $(document).on('change', '.priceFilter', function() {                
                
            var inputId = $(this).attr('id');
            if (checkBoxes.find(value => value == inputId) == undefined) {
                checkBoxes.push(inputId);
                alert('pushed');
            }

            if (inputId == 'minPriceInput') {
                minPrice = $(this).val();
                if (minPrice < 1) {
                    minPrice = 1;
                }
                if (minPrice > 100) {
                    minPrice = 100;
                }
                $('#minPriceInput').val(minPrice);
                if (minPrice > maxPrice) {
                    maxPrice = minPrice;
                    $('#maxPriceInput').val(maxPrice);
                }
            }
            if (inputId == 'maxPriceInput') {
                maxPrice = $(this).val();
                if (maxPrice > 100) {
                    maxPrice = 100;
                }
                if (maxPrice < 1) {
                    maxPrice = 1;
                }
                $('#maxPriceInput').val(maxPrice);
                if (maxPrice < minPrice) {
                    minPrice = maxPrice;
                    $('#minPriceInput').val(minPrice);
                }
            }

            console.log(checkBoxes);
            console.log('Min Price: ' +minPrice);
            console.log('Max Price: ' +maxPrice);

        });

    </script>
}